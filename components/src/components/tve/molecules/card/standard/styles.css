@import "~brand/css/index.css";

$metaDataZIndex: 3;
$imageZIndex: 1;
$imageOverlayZIndex: 2;
$standardCardRatioValue: 0.5625; /* 9/16 */
$metaDataHeight: 75px;

/* $gridGapCount - cards with grid gap visible, $cardCount- total cards visible */
@define-mixin standardCardHeight $gridWidth, $gridGapCount, $cardCount {
  height: calc(
    (($gridWidth - $grid-gap * $gridGapCount) / $cardCount) *
      ($standardCardRatioValue) + $metaDataHeight
  );
}

.standard {
  position: relative;
  width: calc(($grid-width-xsmall - $grid-gap) * 0.774);
  @mixin standardCardHeight $grid-width-xsmall, 1, 1.3;
  min-width: 256px;
  max-width: 415px;

  @media (--small-up) {
    min-width: 218px;
    max-width: none;
    width: calc(($grid-width-small - $grid-gap * 2) / 3);
    @mixin standardCardHeight $grid-width-small, 2, 3;
  }
  @media (--medium-up) {
    width: calc(($grid-width-medium - $grid-gap * 3) / 4);
    @mixin standardCardHeight $grid-width-small, 3, 4;
  }
  @media (--large-up) {
    width: calc(($grid-width-large - $grid-gap * 3) / 4);
    @mixin standardCardHeight $grid-width-small, 3, 4;
  }
  @media (--xlarge-up) {
    width: calc(($grid-width-xlarge - $grid-gap * 4) / 5);
    @mixin standardCardHeight $grid-width-small, 4, 5;
  }
  @media (--xxlarge-up) {
    width: calc(($grid-width-xxlarge - $grid-gap * 6) / 7);
    @mixin standardCardHeight $grid-width-small, 6, 7;
  }

  &:hover .metaRight,
  &:focus-within .metaRight {
    opacity: 1;
  }
  &:hover .imageContainerContent::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      225deg,
      $brand-color-neutral-1-alpha2,
      transparent 32%
    );
  }
}

.imageContainer {
  background-color: rgba(
    229,
    229,
    229,
    0.1
  ); /* added to blend better with shimmer */
  position: relative;
}

.imageContainerContent {
  height: 0;
  overflow: hidden;
  padding-top: 56.25%;
  position: relative;
  z-index: $imageZIndex;
  border-radius: 2px;
}

.imageContainerOverlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $imageOverlayZIndex;
  height: 50%;
}

.metaDataContainer {
  position: relative;
  z-index: $metaDataZIndex;
  min-height: 140px;
  border-radius: 0 0 2px 2px;

  @media (--small-up) {
    min-height: 175px;
  }
}

.showName {
  color: $brand-color-neutral-8;
}

.metaDataInner {
  position: relative;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  padding-top: 12px;

  & .metaLeft {
    /* Without setting min-width, long subtitles will cause this to overflow */
    min-width: 10px;
    flex-grow: 1;
  }

  & .metaRight {
    flex: 0 0 auto;
    margin: 4px 0 0 4px;
    transition: opacity 0.3s ease-in-out;
  }
}

.subtitle span + span {
  margin-left: 12px;

  @media (--medium-up) {
    margin-left: 12px;
  }
}

.description {
  position: relative;
  opacity: 0;
  padding: 6px 20px 0 0;
  color: $brand-color-neutral-9;

  & > p {
    line-height: 1.67;
    margin-top: 8px;

    /* the designs request line-clamp to NOT break mid word. That would require
         a JS implementation */
  }
}

.hoverBackground {
  z-index: 0;
  width: 100%;
  top: 0px;
  height: 83%;
  opacity: 0;
  position: absolute;
  box-shadow: 0 8px 16px $brand-color-neutral-1-alpha1,
    0 8px 16px $brand-color-neutral-1-alpha1;
  transition: box-shadow 0.1s cubic-bezier(0.25, 0.8, 0.25, 1),
    background-color 0.1s cubic-bezier(0.25, 0.8, 0.25, 1);
  background-color: $brand-color-light;
}

.hoverBackgroundPlayer {
  z-index: 0;
  width: 100%;
  top: 0px;
  height: 80%;
  opacity: 0;
  position: absolute;
  box-shadow: 0 2px 12px 0 $brand-color-neutral-1;
  background-color: $brand-color-neutral-1;
}

.kebab {
  position: relative;
  height: 0;
  width: 100%;

  &:after {
    position: absolute;
    z-index: 10;
    right: -3px;
    bottom: -28px;
    content: "\2807";
    font-size: 34px;
    color: $brand-color-neutral-10;
    opacity: 0.43;
    width: 12px;
    overflow: hidden;
  }
}

.paddedTitle {
  padding-bottom: 4px;
}

.drawer {
  padding: 0 $grid-margin-xsmall 40px $grid-margin-xsmall;

  @media (--small-up) {
    padding: 0 $grid-margin-small 40px $grid-margin-small;
  }
  @media (--medium-up) {
    padding: 0 $grid-margin-medium 40px $grid-margin-medium;
  }
  @media (--large-up) {
    padding: 0 $grid-margin-large 40px $grid-margin-large;
  }

  .subtitle {
    color: $brand-color-neutral-4;
    font-weight: 600;
    margin-bottom: 4px;
    line-height: normal;
    display: block;
  }
  .title {
    color: $brand-color-neutral-2;
    line-height: 1.25;
    margin-top: 4px;
    font-size: 18px;
    letter-spacing: 0.02em;
  }
  .durationRatingAirdate {
    > span + span {
      margin-left: 1em;
    }
    margin-top: 4px;
    color: $brand-color-neutral-4;
  }
  .description {
    padding: 16px 20px 0 0;
    opacity: 1;
    color: $brand-color-neutral-3;

    & > p {
      line-height: 1.4;
      margin-top: 0px;
    }
  }
  .drawerDescription {
    font-size: 14px;
    letter-spacing: 0.005em;
  }
}

.drawerButtons {
  align-items: center;
  display: flex;
  justify-content: flex-start;
  margin-top: 32px;

  .playButtonIcon {
    width: 14px;
    height: auto;
    margin: 4px 8px 0 0;
  }
  .playButton {
    padding: 12px 20px 12px 18px;
  }
  .myListButton {
    margin-left: 24px;
    min-height: 40px;
  }
  .ctaTextContainer {
    font-size: 14px;
  }
}

.favoriteBtnStandard {
  top: 12px;
  right: 12px;
}

.progressBarContainer {
  background-color: rgba($brand-color-neutral-10, 0.3);
}

.progressBar {
  background-color: $brand-color-neutral-10;
}

.progressBarContainerLive {
  background-color: rgba($brand-color-neutral-10, 0.3);
}

.progressBarLive {
  background-color: $brand-color-alert-bright;
}
